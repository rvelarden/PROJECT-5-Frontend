{"ast":null,"code":"var _jsxFileName = \"/Users/rominavelarde/Documents/dronebox/PROJECT-5-Frontend/src/App.js\";\nimport React, { Fragment } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport './App.css';\nimport './index.js';\nimport LoginForm from './components/LoginForm'; // import NotFound from './'\n\nimport MainContainer from './components/MainContainer';\nimport Nav from './components/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null\n    };\n\n    this.updateCurrentUser = user => {\n      this.setState({\n        currentUser: user\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n\n    if (localStorage.getItem(\"token\")) {\n      fetch(\"http://localhost:3000/decode_token\", {\n        headers: {\n          \"Authenticate\": localStorage.token\n        }\n      }).then(res => res.json()).then(userData => {\n        this.updateCurrentUser(userData); //if error, don't update the state\n      });\n    } else {\n      console.log(\"No token found, user is not authenticated\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        user: this.state.currentUser,\n        updateCurrentUser: this.updateCurrentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/MainContainer\",\n          render: () => this.state.currentUser ? /*#__PURE__*/_jsxDEV(MainContainer, {\n            currentUser: this.state.currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 88\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: () => this.state.currentUser == null ? /*#__PURE__*/_jsxDEV(LoginForm, {\n            updateCurrentUser: this.updateCurrentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/MainContainer/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 99\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/rominavelarde/Documents/dronebox/PROJECT-5-Frontend/src/App.js"],"names":["React","Fragment","Route","Switch","Redirect","withRouter","LoginForm","MainContainer","Nav","App","Component","state","currentUser","updateCurrentUser","user","setState","componentDidMount","console","log","localStorage","getItem","fetch","headers","token","then","res","json","userData","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,OAAO,WAAP;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;AAGA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,WAAW,EAAE;AADP,KAFwB;;AAAA,SAMhCC,iBANgC,GAMXC,IAAD,IAAS;AAC3B,WAAKC,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAEE;AADD,OAAd;AAGD,KAV+B;AAAA;;AAYhCE,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,QAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC/BC,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,QAAAA,OAAO,EAAE;AACP,0BAAgBH,YAAY,CAACI;AADtB;AADiC,OAAvC,CAAL,CAKCC,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALb,EAMCF,IAND,CAMMG,QAAQ,IAAI;AAChB,aAAKd,iBAAL,CAAuBc,QAAvB,EADgB,CAEhB;AACD,OATD;AAUD,KAXD,MAWK;AACHV,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACD;AACF;;AAGDU,EAAAA,MAAM,GAAE;AACR,wBACE,QAAC,QAAD;AAAA,8BACG,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC,WAAtB;AAAmC,QAAA,iBAAiB,EAAE,KAAKC;AAA3D;AAAA;AAAA;AAAA;AAAA,cADH,eAEA,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,MAAM,EAAE,mBAAK,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAE,gBAAnB;AAAoC,UAAA,MAAM,EAAE,MAC5C,KAAKF,KAAL,CAAWC,WAAX,gBAAyB,QAAC,aAAD;AAAe,YAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAAzB,gBAAiF,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADjF;AAAA;AAAA;AAAA;AAAA,gBAHF,eAKE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,MAAM,EAAE,MACnC,KAAKD,KAAL,CAAWC,WAAX,IAA0B,IAA1B,gBAAiC,QAAC,SAAD;AAAW,YAAA,iBAAiB,EAAE,KAAKC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAAjC,gBAA4F,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAD5F;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcC;;AA9C+B;;AAiDlC,oBAAeR,UAAU,CAACI,GAAD,CAAzB","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport './App.css';\nimport './index.js'\nimport LoginForm from './components/LoginForm'\n// import NotFound from './'\nimport MainContainer from './components/MainContainer'\nimport Nav from './components/Nav'\n\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: null\n  }\n\n  updateCurrentUser = (user) =>{\n    this.setState({\n      currentUser: user \n    })\n  }\n\n  componentDidMount(){\n    console.log(\"mounted\")\n    if(localStorage.getItem(\"token\")){\n      fetch(\"http://localhost:3000/decode_token\", {\n        headers: {\n          \"Authenticate\": localStorage.token\n        }\n      })\n      .then(res => res.json())\n      .then(userData => {\n        this.updateCurrentUser(userData)\n        //if error, don't update the state\n      })\n    }else{\n      console.log(\"No token found, user is not authenticated\")\n    }\n  }\n\n\n  render(){\n  return (\n    <Fragment>\n       <Nav user={this.state.currentUser} updateCurrentUser={this.updateCurrentUser}/>\n    <Switch>\n      <Route exact path='/' render={()=> <Redirect to='/login' />}/>\n      {/* <Route exact path=\"/\" component={LoginForm} /> */}\n      <Route exact path= '/MainContainer' render={()=>(\n      this.state.currentUser ? <MainContainer currentUser={this.state.currentUser}/> : <Redirect to='/login'/>)} />\n      <Route exact path='/login' render={()=> (\n      this.state.currentUser == null ? <LoginForm updateCurrentUser={this.updateCurrentUser} /> : <Redirect to='/MainContainer/'/>)} />\n      {/* <Route component={NotFound} /> */}\n    </Switch>\n    </Fragment>\n    ) \n  }\n}\n\nexport default withRouter(App)\n\n"]},"metadata":{},"sourceType":"module"}