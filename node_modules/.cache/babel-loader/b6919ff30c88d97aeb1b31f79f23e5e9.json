{"ast":null,"code":"var _jsxFileName = \"/Users/rominavelarde/Documents/dronebox/PROJECT-5-Frontend/src/components/LoginForm.js\";\n// import React from \"react\";\n// import { withRouter } from \"react-router\";\n// import { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\nimport Droneproject from './video/droneproject.mp4';\nimport React from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleLoginSubmit = () => {\n      console.log(\"attempting to log in\");\n      fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.error_message) {\n          alert(data.error_message);\n        } else {\n          //succesful log in\n          localStorage.setItem(\"token\", data.token);\n          this.props.updateCurrentUser(data.user_data);\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: Droneproject,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        color: \"teal\",\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          style: {\n            width: \"90px\",\n            height: \"90px\",\n            objectFit: \"cover\"\n          },\n          className: \"logo\",\n          title: \"DroneShip\",\n          src: \"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '2vh'\n        },\n        verticalAlign: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          style: {\n            maxWidth: 450\n          },\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            as: \"h3\",\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              class: \"ui color2 header\",\n              children: \"Delivery Drone Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Header, {\n            as: \"h1\",\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              class: \"ui color1 header\",\n              children: \"Log in to your account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            size: \"large\",\n            onSubmit: this.handleLoginSubmit,\n            size: \"mini\",\n            loading: this.props.authenticatingUser,\n            error: this.props.failedLogin,\n            children: [/*#__PURE__*/_jsxDEV(Message, {\n              error: true,\n              header: this.props.failedLogin ? this.props.error : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Segment, {\n              stacked: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                fluid: true,\n                icon: \"user\",\n                iconPosition: \"left\",\n                placeholder: \"E-mail address\" // label=\"email\"\n                ,\n                name: \"email\",\n                onChange: this.handleChange,\n                value: this.state.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                fluid: true,\n                icon: \"lock\",\n                iconPosition: \"left\",\n                type: \"password\" // label=\"password\"\n                ,\n                placeholder: \"Password\",\n                name: \"password\",\n                onChange: this.handleChange,\n                value: this.state.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                secondary: true,\n                fluid: true,\n                size: \"medium\",\n                type: \"submit\",\n                color: \"teal\",\n                style: {\n                  marginBottom: '1em'\n                },\n                children: \"Log In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }, this)]\n          }, \"mini\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 2\n    }, this);\n  }\n\n}\n\nexport default LoginForm; // class LoginForm extends React.Component {\n//   state = {\n//     email: \"\",\n//     password: \"\"\n//   };\n//   handleChange = (e, { name, value }) => {\n//     this.setState({ [name]: value });\n//   };\n//   //When form is submitted, make a fetch to \"log in the user\"\n//   handleLoginSubmit = () => {\n//     console.log(\"attempting to log in\")\n//     fetch(\"http://localhost:3000/login\", {\n//       method:\"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         email: this.state.email,\n//         password: this.state.password\n//       })\n//     }).then(res => res.json())\n//     .then(data => {\n//        if(data.error_message){\n//         alert(data.error_message)\n//             }else{\n//                 //succesful log in\n//             localStorage.setItem(\"token\", data.token)\n//             this.props.updateCurrentUser(data.user_data)\n//         }\n//     })\n//   }\n//   render() {\n//     return (\n//         <Segment className='loginform'>\n//         <Image  className=\"logo\" title=\"DroneShip\" src=\"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\"></Image>\n//         <Form className='grabloginform'\n//           onSubmit={this.handleLoginSubmit}\n//           size=\"mini\"\n//           key=\"mini\"\n//           loading={this.props.authenticatingUser}\n//           error={this.props.failedLogin}\n//         >\n//           <Message\n//             error\n//             header={this.props.failedLogin ? this.props.error : null}\n//           />\n//           <Form.Group widths=\"equal\">\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               label=\"email\"\n//               placeholder=\"email\"\n//               name=\"email\"\n//               onChange={this.handleChange}\n//               value={this.state.email}\n//             />\n//             <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               type=\"password\"\n//               label=\"password\"\n//               placeholder=\"password\"\n//               name=\"password\"\n//               onChange={this.handleChange}\n//               value={this.state.password}\n//             />\n//             <br></br>\n//           </Form.Group>\n//           <Button type=\"submit\">Login</Button>\n//       </Form>\n//     </Segment>\n//     );\n//   }\n// }\n// export default withRouter(LoginForm);\n// import React from 'react';\n// import { withRouter } from 'react-router'\n// import {Button, Form, Segment, Message} from 'semantic-ui-react'\n// class LoginForm extends React.Component {\n//     state = {\n//         name: '',\n//         password: ''\n//     }\n//         handleChange = (e, { name, value }) => {\n//             this.setState({ [name]: value })\n//         }\n//         handleLoginSubmit = ()=>{\n//             fetch('http://localhost:3000/login',{\n//                 method: 'POST',\n//                 headers: {\"Content-Type\":\"application/json\",\n//                 \"Accept\" : \"aplication.json\"\n//             },\n//             body: JSON.stringify({\n//                 name: this.state.name,\n//                 password: this.state.password\n//             })\n//         }).then(res => res.json())\n//         .then(userData => {\n//             if(userData.error_message){\n//                 alert(userData.error_message)\n//             }else{\n//             this.props.updateCurrentUser(userData)\n//             }\n//         })\n//     }\n//     render() {\n//         return (\n//           <Segment>\n//             <Form\n//               onSubmit={this.handleLoginSubmit}\n//               size=\"mini\"\n//               key=\"mini\"\n//               loading={this.props.authenticatingUser}\n//               error={this.props.failedLogin}\n//             >\n//               <Message\n//                 error\n//                 header={this.props.failedLogin ? this.props.error : null}\n//               />\n//               <Form.Group widths=\"equal\">\n//                 <Form.Input\n//                   label=\"username\"\n//                   placeholder=\"username\"\n//                   name=\"username\"\n//                   onChange={this.handleChange}\n//                   value={this.state.username}\n//                 />\n//                 <Form.Input\n//                   type=\"password\"\n//                   label=\"password\"\n//                   placeholder=\"password\"\n//                   name=\"password\"\n//                   onChange={this.handleChange}\n//                   value={this.state.password}\n//                 />\n//               </Form.Group>\n//               <Button type=\"submit\">Login</Button>\n//             </Form>\n//           </Segment>\n//         );\n//       }\n//     }\n//     export default LoginForm","map":{"version":3,"sources":["/Users/rominavelarde/Documents/dronebox/PROJECT-5-Frontend/src/components/LoginForm.js"],"names":["Droneproject","React","Button","Form","Grid","Header","Image","Message","Segment","LoginForm","Component","state","email","password","handleChange","e","name","value","setState","handleLoginSubmit","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","error_message","alert","localStorage","setItem","token","props","updateCurrentUser","user_data","render","width","height","objectFit","maxWidth","authenticatingUser","failedLogin","error","marginBottom"],"mappings":"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":["// import React from \"react\";\n// import { withRouter } from \"react-router\";\n// import { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\nimport Droneproject from './video/droneproject.mp4'\nimport React from 'react'\nimport { Button, Form, Grid, Header, Image, Message, Segment\n } from 'semantic-ui-react'\n\n  \n\n\nclass LoginForm extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  //When form is submitted, make a fetch to \"log in the user\"\n  handleLoginSubmit = () => {\n    console.log(\"attempting to log in\")\n    fetch(\"http://localhost:3000/login\", {\n      method:\"POST\",\n      headers: {\n        \"Content-Type\" : \"application/json\",\n        \"Accept\" : \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n      })\n    }).then(res => res.json())\n    .then(data => {\n       if(data.error_message){\n        alert(data.error_message)\n            }else{\n                //succesful log in\n            localStorage.setItem(\"token\", data.token)\n            this.props.updateCurrentUser(data.user_data)\n        }\n        \n    })\n  }\n  render() {\n        return (\n <div className=\"banner\" >\n    <video autoPlay loop muted>\n    <source src={Droneproject} type='video/mp4' />\n</video>\n   <br></br>\n      <Header as='h2' color='teal' textAlign='center'>\n        <Image style={{ width: \"90px\", height: \"90px\", objectFit: \"cover\" }} className=\"logo\" title=\"DroneShip\" src=\"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\" />\n      </Header>\n    \n  <Grid textAlign='center' style={{ height: '2vh' }} verticalAlign='middle' >\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <Header as='h3'  textAlign='center' >\n      <h4 class=\"ui color2 header\">Delivery Drone Services</h4>\n      </Header>\n      <br></br>\n      <Header as='h1'  textAlign='center' >\n      <h1 class=\"ui color1 header\">Log in to your account</h1>\n       </Header>\n      <Form size='large'\n          onSubmit={this.handleLoginSubmit}\n          size=\"mini\"\n          key=\"mini\"\n          loading={this.props.authenticatingUser}\n          error={this.props.failedLogin}\n          \n        >\n           <Message\n            error\n            header={this.props.failedLogin ? this.props.error : null}\n          />\n        <Segment stacked>\n          <Form.Input \n          fluid icon='user' iconPosition='left' placeholder='E-mail address'\n              // label=\"email\"\n              name=\"email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n           />\n         \n              <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              type=\"password\"\n              // label=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n         {/* <Button type=\"submit\">Login</Button> */}\n          \n          <Button secondary fluid size='medium' type=\"submit\" color='teal' style={{ marginBottom: '1em' }}>\n            Log In\n          </Button>\n        </Segment>\n      </Form>\n    </Grid.Column>\n  </Grid>\n  </div>\n          )\n        }\n      } \n\nexport default LoginForm\n\n// class LoginForm extends React.Component {\n//   state = {\n//     email: \"\",\n//     password: \"\"\n//   };\n\n//   handleChange = (e, { name, value }) => {\n//     this.setState({ [name]: value });\n//   };\n\n//   //When form is submitted, make a fetch to \"log in the user\"\n//   handleLoginSubmit = () => {\n//     console.log(\"attempting to log in\")\n//     fetch(\"http://localhost:3000/login\", {\n//       method:\"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         email: this.state.email,\n//         password: this.state.password\n//       })\n//     }).then(res => res.json())\n//     .then(data => {\n//        if(data.error_message){\n//         alert(data.error_message)\n//             }else{\n//                 //succesful log in\n//             localStorage.setItem(\"token\", data.token)\n//             this.props.updateCurrentUser(data.user_data)\n//         }\n        \n//     })\n//   }\n\n//   render() {\n//     return (\n//         <Segment className='loginform'>\n\n//         <Image  className=\"logo\" title=\"DroneShip\" src=\"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\"></Image>\n//         <Form className='grabloginform'\n//           onSubmit={this.handleLoginSubmit}\n//           size=\"mini\"\n//           key=\"mini\"\n//           loading={this.props.authenticatingUser}\n//           error={this.props.failedLogin}\n//         >\n//           <Message\n//             error\n//             header={this.props.failedLogin ? this.props.error : null}\n//           />\n//           <Form.Group widths=\"equal\">\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               label=\"email\"\n//               placeholder=\"email\"\n//               name=\"email\"\n//               onChange={this.handleChange}\n//               value={this.state.email}\n//             />\n//             <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               type=\"password\"\n//               label=\"password\"\n//               placeholder=\"password\"\n//               name=\"password\"\n//               onChange={this.handleChange}\n//               value={this.state.password}\n//             />\n//             <br></br>\n//           </Form.Group>\n//           <Button type=\"submit\">Login</Button>\n//       </Form>\n//     </Segment>\n       \n//     );\n//   }\n// }\n\n// export default withRouter(LoginForm);\n\n\n\n\n// import React from 'react';\n// import { withRouter } from 'react-router'\n// import {Button, Form, Segment, Message} from 'semantic-ui-react'\n\n// class LoginForm extends React.Component {\n\n//     state = {\n//         name: '',\n//         password: ''\n//     }\n       \n//         handleChange = (e, { name, value }) => {\n//             this.setState({ [name]: value })\n//         }\n//         handleLoginSubmit = ()=>{\n//             fetch('http://localhost:3000/login',{\n//                 method: 'POST',\n//                 headers: {\"Content-Type\":\"application/json\",\n//                 \"Accept\" : \"aplication.json\"\n//             },\n//             body: JSON.stringify({\n//                 name: this.state.name,\n//                 password: this.state.password\n//             })\n//         }).then(res => res.json())\n//         .then(userData => {\n//             if(userData.error_message){\n//                 alert(userData.error_message)\n//             }else{\n//             this.props.updateCurrentUser(userData)\n//             }\n//         })\n//     }\n    \n//     render() {\n//         return (\n//           <Segment>\n//             <Form\n//               onSubmit={this.handleLoginSubmit}\n//               size=\"mini\"\n//               key=\"mini\"\n//               loading={this.props.authenticatingUser}\n//               error={this.props.failedLogin}\n//             >\n//               <Message\n//                 error\n//                 header={this.props.failedLogin ? this.props.error : null}\n//               />\n//               <Form.Group widths=\"equal\">\n//                 <Form.Input\n//                   label=\"username\"\n//                   placeholder=\"username\"\n//                   name=\"username\"\n//                   onChange={this.handleChange}\n//                   value={this.state.username}\n//                 />\n//                 <Form.Input\n//                   type=\"password\"\n//                   label=\"password\"\n//                   placeholder=\"password\"\n//                   name=\"password\"\n//                   onChange={this.handleChange}\n//                   value={this.state.password}\n//                 />\n//               </Form.Group>\n//               <Button type=\"submit\">Login</Button>\n//             </Form>\n//           </Segment>\n//         );\n//       }\n//     }\n\n\n\n//     export default LoginForm"]},"metadata":{},"sourceType":"module"}